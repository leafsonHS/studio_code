apply plugin: 'com.android.application'


android {
    useLibrary 'org.apache.http.legacy'

    buildToolsVersion "27.0.1"
    defaultConfig {
        multiDexEnabled true
        applicationId "com.leafson.lifecycle"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 47
        versionName "47.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    compileSdkVersion 26

    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            jniLibs.srcDirs = ['libs']
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
}



dependencies {

    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.google.android.gms:play-services-ads:11.8.0'
    testCompile 'junit:junit:4.12'
}




buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
    }
}


allprojects {
    repositories {
        jcenter()
        google()

    }
}
task copyApk(type: Copy, dependsOn: 'build') {
    from('build/outputs/apk')
    into('../dist')
    include('*.apk')
}



